swagger: '2.0'
info:
  title: Cosmos SDK Liquidity Module - REST and gRPC Gateway docs
  description: 'A REST interface for state queries, transactions'
  version: 2.3.1
paths:
  /cosmos/liquidity/v1beta1/params:
    get:
      summary: Get all parameters of the liquidity module.
      description: Returns all parameters of the liquidity module.
      operationId: LiquidityQueries
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params holds all the parameters of this module.
                type: object
                properties:
                  pool_types:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: uint32
                          example: '1'
                          title: >-
                            This is the id of the pool_type that is used as
                            pool_type_id for pool creation.

                            In this version, only pool-type-id 1 is supported.

                            {"id":1,"name":"ConstantProductLiquidityPool","min_reserve_coin_num":2,"max_reserve_coin_num":2,"description":""}
                        name:
                          type: string
                          example: ConstantProductLiquidityPool
                          description: name of the pool type.
                        min_reserve_coin_num:
                          type: integer
                          format: uint32
                          example: '2'
                          description: >-
                            minimum number of reserveCoins for
                            LiquidityPoolType, only 2 reserve coins are
                            supported.
                        max_reserve_coin_num:
                          type: integer
                          format: uint32
                          example: '2'
                          description: >-
                            maximum number of reserveCoins for
                            LiquidityPoolType, only 2 reserve coins are
                            supported.
                        description:
                          type: string
                          description: description of the pool type.
                      description: >-
                        Structure for the pool type to distinguish the
                        characteristics of the reserve pools.
                    title: list of available pool types
                  min_init_deposit_amount:
                    type: string
                    format: sdk.Int
                    example: '1000000'
                    description: >-
                      Minimum number of coins to be deposited to the liquidity
                      pool on pool creation.
                  init_pool_coin_mint_amount:
                    type: string
                    format: sdk.Int
                    example: '1000000'
                    description: Initial mint amount of pool coins upon pool creation.
                  max_reserve_coin_amount:
                    type: string
                    format: sdk.Int
                    example: '1000000000000'
                    description: >-
                      Limit the size of each liquidity pool to minimize risk. In
                      development, set to 0 for no limit. In production, set a
                      limit.
                  pool_creation_fee:
                    type: array
                    format: sdk.Coins
                    example:
                      - denom: uatom
                        amount: '100000000'
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    description: >-
                      Fee paid to create a Liquidity Pool. Set a fee to prevent
                      spamming.
                  swap_fee_rate:
                    type: string
                    format: sdk.Dec
                    example: '0.003'
                    description: Swap fee rate for every executed swap.
                  withdraw_fee_rate:
                    type: string
                    format: sdk.Dec
                    example: '0.003'
                    description: >-
                      Reserve coin withdrawal with less proportion by
                      withdrawFeeRate.
                  max_order_amount_ratio:
                    type: string
                    format: sdk.Dec
                    example: '0.003'
                    description: >-
                      Maximum ratio of reserve coins that can be ordered at a
                      swap order.
                  unit_batch_height:
                    type: integer
                    format: uint32
                    example: '1'
                    description: The smallest unit batch height for every liquidity pool.
                  circuit_breaker_enabled:
                    type: boolean
                    format: bool
                    example: 'false'
                    description: >-
                      Circuit breaker enables or disables transaction messages
                      in liquidity module.
            description: >-
              the response type for the QueryParamsResponse RPC method. This
              includes current parameter of the liquidity module.
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
      externalDocs:
        description: Find out more about the params
        url: >-
          https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/08_params.md
  /cosmos/liquidity/v1beta1/pools:
    get:
      summary: Get existing liquidity pools.
      description: Returns a list of all liquidity pools with pagination result.
      operationId: LiquidityPools
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pools:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                      example: '1'
                      title: id of the pool
                    type_id:
                      type: integer
                      format: uint32
                      example: '1'
                      title: id of the pool_type
                    reserve_coin_denoms:
                      type: array
                      example:
                        - denomX
                        - denomY
                      items:
                        type: string
                      title: denoms of reserve coin pair of the pool
                    reserve_account_address:
                      type: string
                      format: sdk.AccAddress
                      example: cosmos16ddqestwukv0jzcyfn3fdfq9h2wrs83cr4rfm3
                      title: reserve account address of the pool
                    pool_coin_denom:
                      type: string
                      example: >-
                        poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
                      title: denom of pool coin of the pool
                  description: >-
                    Pool defines the liquidity pool that contains pool
                    information.
              pagination:
                description: >-
                  pagination defines the pagination in the response. not working
                  on this version.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              the response type for the QueryLiquidityPoolsResponse RPC method.
              This includes a list of all existing liquidity pools and paging
              results that contain next_key and total count.
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              code: 2
              message: >-
                rpc error: code = NotFound desc = There are no pools present.:
                key not found
              details: []
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/tendermint/liquidity/blob/develop/doc/client.md'
  '/cosmos/liquidity/v1beta1/pools/pool_coin_denom/{pool_coin_denom}':
    get:
      summary: Get specific liquidity pool corresponding to the pool_coin_denom.
      description: It returns the liquidity pool corresponding to the pool_coin_denom.
      operationId: LiquidityPoolByPoolCoinDenom
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                    example: '1'
                    title: id of the pool
                  type_id:
                    type: integer
                    format: uint32
                    example: '1'
                    title: id of the pool_type
                  reserve_coin_denoms:
                    type: array
                    example:
                      - denomX
                      - denomY
                    items:
                      type: string
                    title: denoms of reserve coin pair of the pool
                  reserve_account_address:
                    type: string
                    format: sdk.AccAddress
                    example: cosmos16ddqestwukv0jzcyfn3fdfq9h2wrs83cr4rfm3
                    title: reserve account address of the pool
                  pool_coin_denom:
                    type: string
                    example: >-
                      poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
                    title: denom of pool coin of the pool
                description: >-
                  Pool defines the liquidity pool that contains pool
                  information.
            description: >-
              the response type for the QueryLiquidityPoolResponse RPC method.
              Returns the liquidity pool that corresponds to the requested
              pool_id.
        '404':
          description: Not Found
          schema: {}
          examples:
            application/json:
              code: 5
              message: >-
                rpc error: code = NotFound desc = liquidity pool with pool coin
                denom xx doesn't exist: key not found
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              code: 2
              message: >-
                rpc error: code = NotFound desc = the liquidity pool
                corresponding to the pool_coin_denom doesn't exist: key not
                found
              details: []
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_coin_denom
          in: path
          required: true
          type: string
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/tendermint/liquidity/blob/develop/doc/client.md'
  '/cosmos/liquidity/v1beta1/pools/reserve_acc/{reserve_acc}':
    get:
      summary: Get specific liquidity pool corresponding to the reserve account.
      description: It returns the liquidity pool corresponding to the reserve account.
      operationId: LiquidityPoolByReserveAcc
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                    example: '1'
                    title: id of the pool
                  type_id:
                    type: integer
                    format: uint32
                    example: '1'
                    title: id of the pool_type
                  reserve_coin_denoms:
                    type: array
                    example:
                      - denomX
                      - denomY
                    items:
                      type: string
                    title: denoms of reserve coin pair of the pool
                  reserve_account_address:
                    type: string
                    format: sdk.AccAddress
                    example: cosmos16ddqestwukv0jzcyfn3fdfq9h2wrs83cr4rfm3
                    title: reserve account address of the pool
                  pool_coin_denom:
                    type: string
                    example: >-
                      poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
                    title: denom of pool coin of the pool
                description: >-
                  Pool defines the liquidity pool that contains pool
                  information.
            description: >-
              the response type for the QueryLiquidityPoolResponse RPC method.
              Returns the liquidity pool that corresponds to the requested
              pool_id.
        '404':
          description: Not Found
          schema: {}
          examples:
            application/json:
              code: 5
              message: >-
                rpc error: code = NotFound desc = the reserve account address xx
                is not valid: key not found
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              code: 2
              message: >-
                rpc error: code = NotFound desc = the liquidity pool
                corresponding to the reserve account doesn't exist: key not
                found
              details: []
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: reserve_acc
          in: path
          required: true
          type: string
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/tendermint/liquidity/blob/develop/doc/client.md'
  '/cosmos/liquidity/v1beta1/pools/{pool_id}':
    get:
      summary: Get specific liquidity pool.
      description: Returns the liquidity pool that corresponds to the pool_id.
      operationId: LiquidityPool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                    example: '1'
                    title: id of the pool
                  type_id:
                    type: integer
                    format: uint32
                    example: '1'
                    title: id of the pool_type
                  reserve_coin_denoms:
                    type: array
                    example:
                      - denomX
                      - denomY
                    items:
                      type: string
                    title: denoms of reserve coin pair of the pool
                  reserve_account_address:
                    type: string
                    format: sdk.AccAddress
                    example: cosmos16ddqestwukv0jzcyfn3fdfq9h2wrs83cr4rfm3
                    title: reserve account address of the pool
                  pool_coin_denom:
                    type: string
                    example: >-
                      poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
                    title: denom of pool coin of the pool
                description: >-
                  Pool defines the liquidity pool that contains pool
                  information.
            description: >-
              the response type for the QueryLiquidityPoolResponse RPC method.
              Returns the liquidity pool that corresponds to the requested
              pool_id.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: >-
                type mismatch, parameter: pool_id, error: strconv.ParseUint:
                parsing *: invalid syntax
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              code: 2
              message: >-
                rpc error: code = NotFound desc = liquidity pool 3 doesn't
                exist: key not found
              details: []
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/tendermint/liquidity/blob/develop/doc/client.md'
  '/cosmos/liquidity/v1beta1/pools/{pool_id}/batch':
    get:
      summary: Get the pool's current batch.
      description: Returns the current batch of the pool that corresponds to the pool_id.
      operationId: LiquidityPoolBatch
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              batch:
                type: object
                properties:
                  pool_id:
                    type: string
                    format: uint64
                    example: '1'
                    title: id of the pool
                  index:
                    type: string
                    format: uint64
                    example: '1'
                    title: index of this batch
                  begin_height:
                    type: string
                    format: int64
                    example: '1000'
                    title: height where this batch is started
                  deposit_msg_index:
                    type: string
                    format: uint64
                    example: '1'
                    title: last index of DepositMsgStates
                  withdraw_msg_index:
                    type: string
                    format: uint64
                    example: '1'
                    title: last index of WithdrawMsgStates
                  swap_msg_index:
                    type: string
                    format: uint64
                    example: '1'
                    title: last index of SwapMsgStates
                  executed:
                    type: boolean
                    example: true
                    title: 'true if executed, false if not executed'
                description: >-
                  PoolBatch defines the batch or batches of a given liquidity
                  pool that contains indexes of deposit, withdraw, and swap
                  messages. 

                  Index param increments by 1 if the pool id is same.
            description: >-
              the response type for the QueryLiquidityPoolBatchResponse RPC
              method. Returns the liquidity pool batch that corresponds to the
              requested pool_id.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: >-
                type mismatch, parameter: pool_id, error: strconv.ParseUint:
                parsing *: invalid syntax
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              code: 2
              message: >-
                rpc error: code = NotFound desc = liquidity pool 3 doesn't
                exist: key not found
              details: []
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          description: id of the target pool for query
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/tendermint/liquidity/blob/develop/doc/client.md'
  '/cosmos/liquidity/v1beta1/pools/{pool_id}/batch/deposits':
    get:
      summary: Get all deposit messages in the pool's current batch.
      description: >-
        Returns a list of all deposit messages in the current batch of the pool
        with pagination result.
      operationId: PoolBatchDepositMsgs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              deposits:
                type: array
                items:
                  type: object
                  properties:
                    msg_height:
                      type: string
                      format: int64
                      example: '1000'
                      title: height where this message is appended to the batch
                    msg_index:
                      type: string
                      format: uint64
                      example: '1'
                      title: index of this deposit message in this liquidity pool
                    executed:
                      type: boolean
                      example: true
                      title: 'true if executed on this batch, false if not executed'
                    succeeded:
                      type: boolean
                      example: true
                      title: >-
                        true if executed successfully on this batch, false if
                        failed
                    to_be_deleted:
                      type: boolean
                      example: true
                      title: >-
                        true if ready to be deleted on kvstore, false if not
                        ready to be deleted
                    msg:
                      title: MsgDepositWithinBatch
                      type: object
                      properties:
                        depositor_address:
                          type: string
                          format: sdk.AccAddress
                          example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
                          description: account address of the origin of this message
                        pool_id:
                          type: string
                          format: uint64
                          example: '1'
                          title: id of the target pool
                        deposit_coins:
                          type: array
                          format: sdk.Coins
                          example:
                            - denom: denomX
                              amount: '1000000'
                            - denom: denomY
                              amount: '2000000'
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: >-
                              Coin defines a token with a denomination and an
                              amount.


                              NOTE: The amount field is an Int which implements
                              the custom method

                              signatures required by gogoproto.
                          title: reserve coin pair of the pool to deposit
                      description: >-
                        `MsgDepositWithinBatch defines` an `sdk.Msg` type that
                        supports submitting 

                        a deposit request to the batch of the liquidity pool.

                        Deposit is submitted to the batch of the Liquidity pool
                        with the specified 

                        `pool_id`, `deposit_coins` for reserve.

                        This request is stacked in the batch of the liquidity
                        pool, is not processed 

                        immediately, and is processed in the `endblock` at the
                        same time as other requests.


                        See:
                        https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
                  description: >-
                    DepositMsgState defines the state of deposit message that
                    contains state information as it is processed in the next
                    batch or batches.
              pagination:
                description: >-
                  pagination defines the pagination in the response. not working
                  on this version.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              the response type for the QueryPoolBatchDeposit RPC method. This
              includes a list of all currently existing deposit messages of the
              batch and paging results that contain next_key and total count.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: >-
                type mismatch, parameter: pool_id, error: strconv.ParseUint:
                parsing *: invalid syntax
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              code: 2
              message: >-
                rpc error: code = NotFound desc = liquidity pool 3 doesn't
                exist: key not found
              details: []
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          description: id of the target pool for query
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/tendermint/liquidity/blob/develop/doc/client.md'
  '/cosmos/liquidity/v1beta1/pools/{pool_id}/batch/deposits/{msg_index}':
    get:
      summary: Get a specific deposit message in the pool's current batch.
      description: >-
        Returns the deposit message that corresponds to the msg_index in the
        pool's current batch.
      operationId: PoolBatchDepositMsg
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              deposit:
                type: object
                properties:
                  msg_height:
                    type: string
                    format: int64
                    example: '1000'
                    title: height where this message is appended to the batch
                  msg_index:
                    type: string
                    format: uint64
                    example: '1'
                    title: index of this deposit message in this liquidity pool
                  executed:
                    type: boolean
                    example: true
                    title: 'true if executed on this batch, false if not executed'
                  succeeded:
                    type: boolean
                    example: true
                    title: >-
                      true if executed successfully on this batch, false if
                      failed
                  to_be_deleted:
                    type: boolean
                    example: true
                    title: >-
                      true if ready to be deleted on kvstore, false if not ready
                      to be deleted
                  msg:
                    title: MsgDepositWithinBatch
                    type: object
                    properties:
                      depositor_address:
                        type: string
                        format: sdk.AccAddress
                        example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
                        description: account address of the origin of this message
                      pool_id:
                        type: string
                        format: uint64
                        example: '1'
                        title: id of the target pool
                      deposit_coins:
                        type: array
                        format: sdk.Coins
                        example:
                          - denom: denomX
                            amount: '1000000'
                          - denom: denomY
                            amount: '2000000'
                        items:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                        title: reserve coin pair of the pool to deposit
                    description: >-
                      `MsgDepositWithinBatch defines` an `sdk.Msg` type that
                      supports submitting 

                      a deposit request to the batch of the liquidity pool.

                      Deposit is submitted to the batch of the Liquidity pool
                      with the specified 

                      `pool_id`, `deposit_coins` for reserve.

                      This request is stacked in the batch of the liquidity
                      pool, is not processed 

                      immediately, and is processed in the `endblock` at the
                      same time as other requests.


                      See:
                      https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
                description: >-
                  DepositMsgState defines the state of deposit message that
                  contains state information as it is processed in the next
                  batch or batches.
            description: >-
              the response type for the QueryPoolBatchDepositMsg RPC method.
              This includes a batch swap message of the batch.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: >-
                type mismatch, parameter: msg_index, error: strconv.ParseUint:
                parsing *: invalid syntax
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              root:
                code: 2
                details: []
                message: >-
                  rpc error: code = NotFound desc = the msg given msg_index 1
                  doesn't exist or deleted: key not found
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          description: id of the target pool for query
          in: path
          required: true
          type: string
          format: uint64
        - name: msg_index
          description: target msg_index of the pool
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/tendermint/liquidity/blob/develop/doc/client.md'
  '/cosmos/liquidity/v1beta1/pools/{pool_id}/batch/swaps':
    get:
      summary: Get all swap messages in the pool's current batch.
      description: >-
        Returns a list of all swap messages in the current batch of the pool
        with pagination result.
      operationId: PoolBatchSwapMsgs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              swaps:
                type: array
                items:
                  type: object
                  properties:
                    msg_height:
                      type: string
                      format: int64
                      example: '1000'
                      title: height where this message is appended to the batch
                    msg_index:
                      type: string
                      format: uint64
                      example: '1'
                      title: index of this swap message in this liquidity pool
                    executed:
                      type: boolean
                      example: true
                      title: 'true if executed on this batch, false if not executed'
                    succeeded:
                      type: boolean
                      example: true
                      title: >-
                        true if executed successfully on this batch, false if
                        failed
                    to_be_deleted:
                      type: boolean
                      example: true
                      title: >-
                        true if ready to be deleted on kvstore, false if not
                        ready to be deleted
                    order_expiry_height:
                      type: string
                      format: int64
                      example: '1000'
                      title: >-
                        swap orders are cancelled when current height is equal
                        to or higher than ExpiryHeight
                    exchanged_offer_coin:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      format: sdk.Coin
                      example:
                        denom: denomX
                        amount: '600000'
                      title: offer coin exchanged until now
                    remaining_offer_coin:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      format: sdk.Coin
                      example:
                        denom: denomX
                        amount: '400000'
                      title: offer coin currently remaining to be exchanged
                    reserved_offer_coin_fee:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      format: sdk.Coin
                      example:
                        denom: denomX
                        amount: '5000'
                      title: reserve fee for pays fee in half offer coin
                    msg:
                      title: MsgSwapWithinBatch
                      type: object
                      properties:
                        swap_requester_address:
                          type: string
                          format: sdk.AccAddress
                          example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
                          description: account address of the origin of this message
                          title: address of swap requester
                        pool_id:
                          type: string
                          format: uint64
                          example: '1'
                          description: >-
                            id of swap type, must match the value in the pool.
                            Only `swap_type_id` 1 is supported.
                        swap_type_id:
                          type: integer
                          format: uint32
                          example: '1'
                          description: id of swap type. Must match the value in the pool.
                        offer_coin:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                          format: sdk.Coin
                          example:
                            denom: denomX
                            amount: '1000000'
                        demand_coin_denom:
                          type: string
                          example: denomB
                          description: >-
                            denom of demand coin to be exchanged on the swap
                            request, must match the denom in the pool.
                        offer_coin_fee:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                          format: sdk.Coin
                          example:
                            denom: denomX
                            amount: '5000'
                        order_price:
                          type: string
                          format: sdk.Dec
                          example: '1.1'
                          description: >-
                            limit order price for the order, the price is the
                            exchange ratio of X/Y

                            where X is the amount of the first coin and Y is the
                            amount 

                            of the second coin when their denoms are sorted
                            alphabetically.
                      description: >-
                        `MsgSwapWithinBatch` defines an sdk.Msg type that
                        supports submitting a swap offer request to the batch of
                        the liquidity pool.

                        Submit swap offer to the liquidity pool batch with the
                        specified the `pool_id`, `swap_type_id`,

                        `demand_coin_denom` with the coin and the price you're
                        offering

                        and `offer_coin_fee` must be half of offer coin amount *
                        current `params.swap_fee_rate` and ceil for reservation
                        to pay fees.

                        This request is stacked in the batch of the liquidity
                        pool, is not processed 

                        immediately, and is processed in the `endblock` at the
                        same time as other requests.

                        You must request the same fields as the pool.

                        Only the default `swap_type_id` 1 is supported.


                        See:
                        https://github.com/tendermint/liquidity/tree/develop/doc

                        https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
                  description: >-
                    SwapMsgState defines the state of the swap message that
                    contains state information as the message is processed in
                    the next batch or batches.
              pagination:
                description: >-
                  pagination defines the pagination in the response. not working
                  on this version.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              the response type for the QueryPoolBatchSwapMsgs RPC method. This
              includes list of all currently existing swap messages of the batch
              and paging results that contain next_key and total count.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: >-
                type mismatch, parameter: pool_id, error: strconv.ParseUint:
                parsing *: invalid syntax
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              code: 2
              message: >-
                rpc error: code = NotFound desc = liquidity pool 3 doesn't
                exist: key not found
              details: []
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          description: id of the target pool for query
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/tendermint/liquidity/blob/develop/doc/client.md'
  '/cosmos/liquidity/v1beta1/pools/{pool_id}/batch/swaps/{msg_index}':
    get:
      summary: Get a specific swap message in the pool's current batch.
      description: >-
        Returns the swap message that corresponds to the msg_index in the pool's
        current batch
      operationId: PoolBatchSwapMsg
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              swap:
                type: object
                properties:
                  msg_height:
                    type: string
                    format: int64
                    example: '1000'
                    title: height where this message is appended to the batch
                  msg_index:
                    type: string
                    format: uint64
                    example: '1'
                    title: index of this swap message in this liquidity pool
                  executed:
                    type: boolean
                    example: true
                    title: 'true if executed on this batch, false if not executed'
                  succeeded:
                    type: boolean
                    example: true
                    title: >-
                      true if executed successfully on this batch, false if
                      failed
                  to_be_deleted:
                    type: boolean
                    example: true
                    title: >-
                      true if ready to be deleted on kvstore, false if not ready
                      to be deleted
                  order_expiry_height:
                    type: string
                    format: int64
                    example: '1000'
                    title: >-
                      swap orders are cancelled when current height is equal to
                      or higher than ExpiryHeight
                  exchanged_offer_coin:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    format: sdk.Coin
                    example:
                      denom: denomX
                      amount: '600000'
                    title: offer coin exchanged until now
                  remaining_offer_coin:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    format: sdk.Coin
                    example:
                      denom: denomX
                      amount: '400000'
                    title: offer coin currently remaining to be exchanged
                  reserved_offer_coin_fee:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    format: sdk.Coin
                    example:
                      denom: denomX
                      amount: '5000'
                    title: reserve fee for pays fee in half offer coin
                  msg:
                    title: MsgSwapWithinBatch
                    type: object
                    properties:
                      swap_requester_address:
                        type: string
                        format: sdk.AccAddress
                        example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
                        description: account address of the origin of this message
                        title: address of swap requester
                      pool_id:
                        type: string
                        format: uint64
                        example: '1'
                        description: >-
                          id of swap type, must match the value in the pool.
                          Only `swap_type_id` 1 is supported.
                      swap_type_id:
                        type: integer
                        format: uint32
                        example: '1'
                        description: id of swap type. Must match the value in the pool.
                      offer_coin:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                        format: sdk.Coin
                        example:
                          denom: denomX
                          amount: '1000000'
                      demand_coin_denom:
                        type: string
                        example: denomB
                        description: >-
                          denom of demand coin to be exchanged on the swap
                          request, must match the denom in the pool.
                      offer_coin_fee:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                        format: sdk.Coin
                        example:
                          denom: denomX
                          amount: '5000'
                      order_price:
                        type: string
                        format: sdk.Dec
                        example: '1.1'
                        description: >-
                          limit order price for the order, the price is the
                          exchange ratio of X/Y

                          where X is the amount of the first coin and Y is the
                          amount 

                          of the second coin when their denoms are sorted
                          alphabetically.
                    description: >-
                      `MsgSwapWithinBatch` defines an sdk.Msg type that supports
                      submitting a swap offer request to the batch of the
                      liquidity pool.

                      Submit swap offer to the liquidity pool batch with the
                      specified the `pool_id`, `swap_type_id`,

                      `demand_coin_denom` with the coin and the price you're
                      offering

                      and `offer_coin_fee` must be half of offer coin amount *
                      current `params.swap_fee_rate` and ceil for reservation to
                      pay fees.

                      This request is stacked in the batch of the liquidity
                      pool, is not processed 

                      immediately, and is processed in the `endblock` at the
                      same time as other requests.

                      You must request the same fields as the pool.

                      Only the default `swap_type_id` 1 is supported.


                      See:
                      https://github.com/tendermint/liquidity/tree/develop/doc

                      https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
                description: >-
                  SwapMsgState defines the state of the swap message that
                  contains state information as the message is processed in the
                  next batch or batches.
            description: >-
              the response type for the QueryPoolBatchSwapMsg RPC method. This
              includes a batch swap message of the batch.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: >-
                type mismatch, parameter: msg_index, error: strconv.ParseUint:
                parsing *: invalid syntax
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              root:
                code: 2
                details: []
                message: >-
                  rpc error: code = NotFound desc = the msg given msg_index 1
                  doesn't exist or deleted: key not found
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          description: id of the target pool for query
          in: path
          required: true
          type: string
          format: uint64
        - name: msg_index
          description: target msg_index of the pool
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/tendermint/liquidity/blob/develop/doc/client.md'
  '/cosmos/liquidity/v1beta1/pools/{pool_id}/batch/withdraws':
    get:
      summary: Get all withdraw messages in the pool's current batch.
      description: >-
        Returns a list of all withdraw messages in the current batch of the pool
        with pagination result.
      operationId: PoolBatchWithdrawMsgs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              withdraws:
                type: array
                items:
                  type: object
                  properties:
                    msg_height:
                      type: string
                      format: int64
                      example: '1000'
                      title: height where this message is appended to the batch
                    msg_index:
                      type: string
                      format: uint64
                      example: '1'
                      title: index of this withdraw message in this liquidity pool
                    executed:
                      type: boolean
                      example: true
                      title: 'true if executed on this batch, false if not executed'
                    succeeded:
                      type: boolean
                      example: true
                      title: >-
                        true if executed successfully on this batch, false if
                        failed
                    to_be_deleted:
                      type: boolean
                      example: true
                      title: >-
                        true if ready to be deleted on kvstore, false if not
                        ready to be deleted
                    msg:
                      title: MsgWithdrawWithinBatch
                      type: object
                      properties:
                        withdrawer_address:
                          type: string
                          format: sdk.AccAddress
                          example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
                          description: account address of the origin of this message
                        pool_id:
                          type: string
                          format: uint64
                          example: '1'
                          title: id of the target pool
                        pool_coin:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                          format: sdk.Coin
                          example:
                            denom: >-
                              poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
                            amount: '1000'
                      description: >-
                        `MsgWithdrawWithinBatch` defines an `sdk.Msg` type that
                        supports submitting 

                        a withdraw request to the batch of the liquidity pool.

                        Withdraw is submitted to the batch from the Liquidity
                        pool with the 

                        specified `pool_id`, `pool_coin` of the pool.

                        This request is stacked in the batch of the liquidity
                        pool, is not processed 

                        immediately, and is processed in the `endblock` at the
                        same time as other requests.


                        See:
                        https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
                  description: >-
                    WithdrawMsgState defines the state of the withdraw message
                    that contains state information as the message is processed
                    in the next batch or batches.
              pagination:
                description: >-
                  pagination defines the pagination in the response. Not
                  supported on this version.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              the response type for the QueryPoolBatchWithdraw RPC method. This
              includes a list of all currently existing withdraw messages of the
              batch and paging results that contain next_key and total count.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: >-
                type mismatch, parameter: pool_id, error: strconv.ParseUint:
                parsing *: invalid syntax
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              code: 2
              message: >-
                rpc error: code = NotFound desc = liquidity pool 3 doesn't
                exist: key not found
              details: []
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          description: id of the target pool for query
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/tendermint/liquidity/blob/develop/doc/client.md'
  '/cosmos/liquidity/v1beta1/pools/{pool_id}/batch/withdraws/{msg_index}':
    get:
      summary: Get a specific withdraw message in the pool's current batch.
      description: >-
        Returns the withdraw message that corresponds to the msg_index in the
        pool's current batch.
      operationId: PoolBatchWithdrawMsg
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              withdraw:
                type: object
                properties:
                  msg_height:
                    type: string
                    format: int64
                    example: '1000'
                    title: height where this message is appended to the batch
                  msg_index:
                    type: string
                    format: uint64
                    example: '1'
                    title: index of this withdraw message in this liquidity pool
                  executed:
                    type: boolean
                    example: true
                    title: 'true if executed on this batch, false if not executed'
                  succeeded:
                    type: boolean
                    example: true
                    title: >-
                      true if executed successfully on this batch, false if
                      failed
                  to_be_deleted:
                    type: boolean
                    example: true
                    title: >-
                      true if ready to be deleted on kvstore, false if not ready
                      to be deleted
                  msg:
                    title: MsgWithdrawWithinBatch
                    type: object
                    properties:
                      withdrawer_address:
                        type: string
                        format: sdk.AccAddress
                        example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
                        description: account address of the origin of this message
                      pool_id:
                        type: string
                        format: uint64
                        example: '1'
                        title: id of the target pool
                      pool_coin:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                        format: sdk.Coin
                        example:
                          denom: >-
                            poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
                          amount: '1000'
                    description: >-
                      `MsgWithdrawWithinBatch` defines an `sdk.Msg` type that
                      supports submitting 

                      a withdraw request to the batch of the liquidity pool.

                      Withdraw is submitted to the batch from the Liquidity pool
                      with the 

                      specified `pool_id`, `pool_coin` of the pool.

                      This request is stacked in the batch of the liquidity
                      pool, is not processed 

                      immediately, and is processed in the `endblock` at the
                      same time as other requests.


                      See:
                      https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
                description: >-
                  WithdrawMsgState defines the state of the withdraw message
                  that contains state information as the message is processed in
                  the next batch or batches.
            description: >-
              the response type for the QueryPoolBatchWithdrawMsg RPC method.
              This includes a batch swap message of the batch.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: >-
                type mismatch, parameter: msg_index, error: strconv.ParseUint:
                parsing *: invalid syntax
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              root:
                code: 2
                details: []
                message: >-
                  rpc error: code = NotFound desc = the msg given msg_index 1
                  doesn't exist or deleted: key not found
        default:
          description: An unexpected error response.
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          description: id of the target pool for query
          in: path
          required: true
          type: string
          format: uint64
        - name: msg_index
          description: target msg_index of the pool
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/tendermint/liquidity/blob/develop/doc/client.md'
definitions:
  cosmos.base.query.v1beta1.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.base.query.v1beta1.PageResponse:
    type: object
    properties:
      next_key:
        type: string
        format: byte
        title: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
      value:
        type: string
        format: byte
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
            value:
              type: string
              format: byte
  tendermint.liquidity.v1beta1.DepositMsgState:
    type: object
    properties:
      msg_height:
        type: string
        format: int64
        example: '1000'
        title: height where this message is appended to the batch
      msg_index:
        type: string
        format: uint64
        example: '1'
        title: index of this deposit message in this liquidity pool
      executed:
        type: boolean
        example: true
        title: 'true if executed on this batch, false if not executed'
      succeeded:
        type: boolean
        example: true
        title: 'true if executed successfully on this batch, false if failed'
      to_be_deleted:
        type: boolean
        example: true
        title: >-
          true if ready to be deleted on kvstore, false if not ready to be
          deleted
      msg:
        title: MsgDepositWithinBatch
        type: object
        properties:
          depositor_address:
            type: string
            format: sdk.AccAddress
            example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
            description: account address of the origin of this message
          pool_id:
            type: string
            format: uint64
            example: '1'
            title: id of the target pool
          deposit_coins:
            type: array
            format: sdk.Coins
            example:
              - denom: denomX
                amount: '1000000'
              - denom: denomY
                amount: '2000000'
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            title: reserve coin pair of the pool to deposit
        description: >-
          `MsgDepositWithinBatch defines` an `sdk.Msg` type that supports
          submitting 

          a deposit request to the batch of the liquidity pool.

          Deposit is submitted to the batch of the Liquidity pool with the
          specified 

          `pool_id`, `deposit_coins` for reserve.

          This request is stacked in the batch of the liquidity pool, is not
          processed 

          immediately, and is processed in the `endblock` at the same time as
          other requests.


          See:
          https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
    description: >-
      DepositMsgState defines the state of deposit message that contains state
      information as it is processed in the next batch or batches.
  tendermint.liquidity.v1beta1.MsgDepositWithinBatch:
    type: object
    properties:
      depositor_address:
        type: string
        format: sdk.AccAddress
        example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
        description: account address of the origin of this message
      pool_id:
        type: string
        format: uint64
        example: '1'
        title: id of the target pool
      deposit_coins:
        type: array
        format: sdk.Coins
        example:
          - denom: denomX
            amount: '1000000'
          - denom: denomY
            amount: '2000000'
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: reserve coin pair of the pool to deposit
    description: >-
      `MsgDepositWithinBatch defines` an `sdk.Msg` type that supports
      submitting 

      a deposit request to the batch of the liquidity pool.

      Deposit is submitted to the batch of the Liquidity pool with the
      specified 

      `pool_id`, `deposit_coins` for reserve.

      This request is stacked in the batch of the liquidity pool, is not
      processed 

      immediately, and is processed in the `endblock` at the same time as other
      requests.


      See:
      https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
  tendermint.liquidity.v1beta1.MsgSwapWithinBatch:
    type: object
    properties:
      swap_requester_address:
        type: string
        format: sdk.AccAddress
        example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
        description: account address of the origin of this message
        title: address of swap requester
      pool_id:
        type: string
        format: uint64
        example: '1'
        description: >-
          id of swap type, must match the value in the pool. Only `swap_type_id`
          1 is supported.
      swap_type_id:
        type: integer
        format: uint32
        example: '1'
        description: id of swap type. Must match the value in the pool.
      offer_coin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        format: sdk.Coin
        example:
          denom: denomX
          amount: '1000000'
      demand_coin_denom:
        type: string
        example: denomB
        description: >-
          denom of demand coin to be exchanged on the swap request, must match
          the denom in the pool.
      offer_coin_fee:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        format: sdk.Coin
        example:
          denom: denomX
          amount: '5000'
      order_price:
        type: string
        format: sdk.Dec
        example: '1.1'
        description: >-
          limit order price for the order, the price is the exchange ratio of
          X/Y

          where X is the amount of the first coin and Y is the amount 

          of the second coin when their denoms are sorted alphabetically.
    description: >-
      `MsgSwapWithinBatch` defines an sdk.Msg type that supports submitting a
      swap offer request to the batch of the liquidity pool.

      Submit swap offer to the liquidity pool batch with the specified the
      `pool_id`, `swap_type_id`,

      `demand_coin_denom` with the coin and the price you're offering

      and `offer_coin_fee` must be half of offer coin amount * current
      `params.swap_fee_rate` and ceil for reservation to pay fees.

      This request is stacked in the batch of the liquidity pool, is not
      processed 

      immediately, and is processed in the `endblock` at the same time as other
      requests.

      You must request the same fields as the pool.

      Only the default `swap_type_id` 1 is supported.


      See: https://github.com/tendermint/liquidity/tree/develop/doc

      https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
  tendermint.liquidity.v1beta1.MsgWithdrawWithinBatch:
    type: object
    properties:
      withdrawer_address:
        type: string
        format: sdk.AccAddress
        example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
        description: account address of the origin of this message
      pool_id:
        type: string
        format: uint64
        example: '1'
        title: id of the target pool
      pool_coin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        format: sdk.Coin
        example:
          denom: poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
          amount: '1000'
    description: >-
      `MsgWithdrawWithinBatch` defines an `sdk.Msg` type that supports
      submitting 

      a withdraw request to the batch of the liquidity pool.

      Withdraw is submitted to the batch from the Liquidity pool with the 

      specified `pool_id`, `pool_coin` of the pool.

      This request is stacked in the batch of the liquidity pool, is not
      processed 

      immediately, and is processed in the `endblock` at the same time as other
      requests.


      See:
      https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
  tendermint.liquidity.v1beta1.Params:
    type: object
    properties:
      pool_types:
        type: array
        items:
          type: object
          properties:
            id:
              type: integer
              format: uint32
              example: '1'
              title: >-
                This is the id of the pool_type that is used as pool_type_id for
                pool creation.

                In this version, only pool-type-id 1 is supported.

                {"id":1,"name":"ConstantProductLiquidityPool","min_reserve_coin_num":2,"max_reserve_coin_num":2,"description":""}
            name:
              type: string
              example: ConstantProductLiquidityPool
              description: name of the pool type.
            min_reserve_coin_num:
              type: integer
              format: uint32
              example: '2'
              description: >-
                minimum number of reserveCoins for LiquidityPoolType, only 2
                reserve coins are supported.
            max_reserve_coin_num:
              type: integer
              format: uint32
              example: '2'
              description: >-
                maximum number of reserveCoins for LiquidityPoolType, only 2
                reserve coins are supported.
            description:
              type: string
              description: description of the pool type.
          description: >-
            Structure for the pool type to distinguish the characteristics of
            the reserve pools.
        title: list of available pool types
      min_init_deposit_amount:
        type: string
        format: sdk.Int
        example: '1000000'
        description: >-
          Minimum number of coins to be deposited to the liquidity pool on pool
          creation.
      init_pool_coin_mint_amount:
        type: string
        format: sdk.Int
        example: '1000000'
        description: Initial mint amount of pool coins upon pool creation.
      max_reserve_coin_amount:
        type: string
        format: sdk.Int
        example: '1000000000000'
        description: >-
          Limit the size of each liquidity pool to minimize risk. In
          development, set to 0 for no limit. In production, set a limit.
      pool_creation_fee:
        type: array
        format: sdk.Coins
        example:
          - denom: uatom
            amount: '100000000'
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: Fee paid to create a Liquidity Pool. Set a fee to prevent spamming.
      swap_fee_rate:
        type: string
        format: sdk.Dec
        example: '0.003'
        description: Swap fee rate for every executed swap.
      withdraw_fee_rate:
        type: string
        format: sdk.Dec
        example: '0.003'
        description: Reserve coin withdrawal with less proportion by withdrawFeeRate.
      max_order_amount_ratio:
        type: string
        format: sdk.Dec
        example: '0.003'
        description: Maximum ratio of reserve coins that can be ordered at a swap order.
      unit_batch_height:
        type: integer
        format: uint32
        example: '1'
        description: The smallest unit batch height for every liquidity pool.
      circuit_breaker_enabled:
        type: boolean
        format: bool
        example: 'false'
        description: >-
          Circuit breaker enables or disables transaction messages in liquidity
          module.
    description: Params defines the parameters for the liquidity module.
  tendermint.liquidity.v1beta1.Pool:
    type: object
    properties:
      id:
        type: string
        format: uint64
        example: '1'
        title: id of the pool
      type_id:
        type: integer
        format: uint32
        example: '1'
        title: id of the pool_type
      reserve_coin_denoms:
        type: array
        example:
          - denomX
          - denomY
        items:
          type: string
        title: denoms of reserve coin pair of the pool
      reserve_account_address:
        type: string
        format: sdk.AccAddress
        example: cosmos16ddqestwukv0jzcyfn3fdfq9h2wrs83cr4rfm3
        title: reserve account address of the pool
      pool_coin_denom:
        type: string
        example: poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
        title: denom of pool coin of the pool
    description: Pool defines the liquidity pool that contains pool information.
  tendermint.liquidity.v1beta1.PoolBatch:
    type: object
    properties:
      pool_id:
        type: string
        format: uint64
        example: '1'
        title: id of the pool
      index:
        type: string
        format: uint64
        example: '1'
        title: index of this batch
      begin_height:
        type: string
        format: int64
        example: '1000'
        title: height where this batch is started
      deposit_msg_index:
        type: string
        format: uint64
        example: '1'
        title: last index of DepositMsgStates
      withdraw_msg_index:
        type: string
        format: uint64
        example: '1'
        title: last index of WithdrawMsgStates
      swap_msg_index:
        type: string
        format: uint64
        example: '1'
        title: last index of SwapMsgStates
      executed:
        type: boolean
        example: true
        title: 'true if executed, false if not executed'
    description: >-
      PoolBatch defines the batch or batches of a given liquidity pool that
      contains indexes of deposit, withdraw, and swap messages. 

      Index param increments by 1 if the pool id is same.
  tendermint.liquidity.v1beta1.PoolType:
    type: object
    properties:
      id:
        type: integer
        format: uint32
        example: '1'
        title: >-
          This is the id of the pool_type that is used as pool_type_id for pool
          creation.

          In this version, only pool-type-id 1 is supported.

          {"id":1,"name":"ConstantProductLiquidityPool","min_reserve_coin_num":2,"max_reserve_coin_num":2,"description":""}
      name:
        type: string
        example: ConstantProductLiquidityPool
        description: name of the pool type.
      min_reserve_coin_num:
        type: integer
        format: uint32
        example: '2'
        description: >-
          minimum number of reserveCoins for LiquidityPoolType, only 2 reserve
          coins are supported.
      max_reserve_coin_num:
        type: integer
        format: uint32
        example: '2'
        description: >-
          maximum number of reserveCoins for LiquidityPoolType, only 2 reserve
          coins are supported.
      description:
        type: string
        description: description of the pool type.
    description: >-
      Structure for the pool type to distinguish the characteristics of the
      reserve pools.
  tendermint.liquidity.v1beta1.QueryLiquidityPoolBatchResponse:
    type: object
    properties:
      batch:
        type: object
        properties:
          pool_id:
            type: string
            format: uint64
            example: '1'
            title: id of the pool
          index:
            type: string
            format: uint64
            example: '1'
            title: index of this batch
          begin_height:
            type: string
            format: int64
            example: '1000'
            title: height where this batch is started
          deposit_msg_index:
            type: string
            format: uint64
            example: '1'
            title: last index of DepositMsgStates
          withdraw_msg_index:
            type: string
            format: uint64
            example: '1'
            title: last index of WithdrawMsgStates
          swap_msg_index:
            type: string
            format: uint64
            example: '1'
            title: last index of SwapMsgStates
          executed:
            type: boolean
            example: true
            title: 'true if executed, false if not executed'
        description: >-
          PoolBatch defines the batch or batches of a given liquidity pool that
          contains indexes of deposit, withdraw, and swap messages. 

          Index param increments by 1 if the pool id is same.
    description: >-
      the response type for the QueryLiquidityPoolBatchResponse RPC method.
      Returns the liquidity pool batch that corresponds to the requested
      pool_id.
  tendermint.liquidity.v1beta1.QueryLiquidityPoolResponse:
    type: object
    properties:
      pool:
        type: object
        properties:
          id:
            type: string
            format: uint64
            example: '1'
            title: id of the pool
          type_id:
            type: integer
            format: uint32
            example: '1'
            title: id of the pool_type
          reserve_coin_denoms:
            type: array
            example:
              - denomX
              - denomY
            items:
              type: string
            title: denoms of reserve coin pair of the pool
          reserve_account_address:
            type: string
            format: sdk.AccAddress
            example: cosmos16ddqestwukv0jzcyfn3fdfq9h2wrs83cr4rfm3
            title: reserve account address of the pool
          pool_coin_denom:
            type: string
            example: >-
              poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
            title: denom of pool coin of the pool
        description: Pool defines the liquidity pool that contains pool information.
    description: >-
      the response type for the QueryLiquidityPoolResponse RPC method. Returns
      the liquidity pool that corresponds to the requested pool_id.
  tendermint.liquidity.v1beta1.QueryLiquidityPoolsResponse:
    type: object
    properties:
      pools:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
              example: '1'
              title: id of the pool
            type_id:
              type: integer
              format: uint32
              example: '1'
              title: id of the pool_type
            reserve_coin_denoms:
              type: array
              example:
                - denomX
                - denomY
              items:
                type: string
              title: denoms of reserve coin pair of the pool
            reserve_account_address:
              type: string
              format: sdk.AccAddress
              example: cosmos16ddqestwukv0jzcyfn3fdfq9h2wrs83cr4rfm3
              title: reserve account address of the pool
            pool_coin_denom:
              type: string
              example: >-
                poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
              title: denom of pool coin of the pool
          description: Pool defines the liquidity pool that contains pool information.
      pagination:
        description: >-
          pagination defines the pagination in the response. not working on this
          version.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      the response type for the QueryLiquidityPoolsResponse RPC method. This
      includes a list of all existing liquidity pools and paging results that
      contain next_key and total count.
  tendermint.liquidity.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params holds all the parameters of this module.
        type: object
        properties:
          pool_types:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: uint32
                  example: '1'
                  title: >-
                    This is the id of the pool_type that is used as pool_type_id
                    for pool creation.

                    In this version, only pool-type-id 1 is supported.

                    {"id":1,"name":"ConstantProductLiquidityPool","min_reserve_coin_num":2,"max_reserve_coin_num":2,"description":""}
                name:
                  type: string
                  example: ConstantProductLiquidityPool
                  description: name of the pool type.
                min_reserve_coin_num:
                  type: integer
                  format: uint32
                  example: '2'
                  description: >-
                    minimum number of reserveCoins for LiquidityPoolType, only 2
                    reserve coins are supported.
                max_reserve_coin_num:
                  type: integer
                  format: uint32
                  example: '2'
                  description: >-
                    maximum number of reserveCoins for LiquidityPoolType, only 2
                    reserve coins are supported.
                description:
                  type: string
                  description: description of the pool type.
              description: >-
                Structure for the pool type to distinguish the characteristics
                of the reserve pools.
            title: list of available pool types
          min_init_deposit_amount:
            type: string
            format: sdk.Int
            example: '1000000'
            description: >-
              Minimum number of coins to be deposited to the liquidity pool on
              pool creation.
          init_pool_coin_mint_amount:
            type: string
            format: sdk.Int
            example: '1000000'
            description: Initial mint amount of pool coins upon pool creation.
          max_reserve_coin_amount:
            type: string
            format: sdk.Int
            example: '1000000000000'
            description: >-
              Limit the size of each liquidity pool to minimize risk. In
              development, set to 0 for no limit. In production, set a limit.
          pool_creation_fee:
            type: array
            format: sdk.Coins
            example:
              - denom: uatom
                amount: '100000000'
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            description: >-
              Fee paid to create a Liquidity Pool. Set a fee to prevent
              spamming.
          swap_fee_rate:
            type: string
            format: sdk.Dec
            example: '0.003'
            description: Swap fee rate for every executed swap.
          withdraw_fee_rate:
            type: string
            format: sdk.Dec
            example: '0.003'
            description: Reserve coin withdrawal with less proportion by withdrawFeeRate.
          max_order_amount_ratio:
            type: string
            format: sdk.Dec
            example: '0.003'
            description: >-
              Maximum ratio of reserve coins that can be ordered at a swap
              order.
          unit_batch_height:
            type: integer
            format: uint32
            example: '1'
            description: The smallest unit batch height for every liquidity pool.
          circuit_breaker_enabled:
            type: boolean
            format: bool
            example: 'false'
            description: >-
              Circuit breaker enables or disables transaction messages in
              liquidity module.
    description: >-
      the response type for the QueryParamsResponse RPC method. This includes
      current parameter of the liquidity module.
  tendermint.liquidity.v1beta1.QueryPoolBatchDepositMsgResponse:
    type: object
    properties:
      deposit:
        type: object
        properties:
          msg_height:
            type: string
            format: int64
            example: '1000'
            title: height where this message is appended to the batch
          msg_index:
            type: string
            format: uint64
            example: '1'
            title: index of this deposit message in this liquidity pool
          executed:
            type: boolean
            example: true
            title: 'true if executed on this batch, false if not executed'
          succeeded:
            type: boolean
            example: true
            title: 'true if executed successfully on this batch, false if failed'
          to_be_deleted:
            type: boolean
            example: true
            title: >-
              true if ready to be deleted on kvstore, false if not ready to be
              deleted
          msg:
            title: MsgDepositWithinBatch
            type: object
            properties:
              depositor_address:
                type: string
                format: sdk.AccAddress
                example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
                description: account address of the origin of this message
              pool_id:
                type: string
                format: uint64
                example: '1'
                title: id of the target pool
              deposit_coins:
                type: array
                format: sdk.Coins
                example:
                  - denom: denomX
                    amount: '1000000'
                  - denom: denomY
                    amount: '2000000'
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                title: reserve coin pair of the pool to deposit
            description: >-
              `MsgDepositWithinBatch defines` an `sdk.Msg` type that supports
              submitting 

              a deposit request to the batch of the liquidity pool.

              Deposit is submitted to the batch of the Liquidity pool with the
              specified 

              `pool_id`, `deposit_coins` for reserve.

              This request is stacked in the batch of the liquidity pool, is not
              processed 

              immediately, and is processed in the `endblock` at the same time
              as other requests.


              See:
              https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
        description: >-
          DepositMsgState defines the state of deposit message that contains
          state information as it is processed in the next batch or batches.
    description: >-
      the response type for the QueryPoolBatchDepositMsg RPC method. This
      includes a batch swap message of the batch.
  tendermint.liquidity.v1beta1.QueryPoolBatchDepositMsgsResponse:
    type: object
    properties:
      deposits:
        type: array
        items:
          type: object
          properties:
            msg_height:
              type: string
              format: int64
              example: '1000'
              title: height where this message is appended to the batch
            msg_index:
              type: string
              format: uint64
              example: '1'
              title: index of this deposit message in this liquidity pool
            executed:
              type: boolean
              example: true
              title: 'true if executed on this batch, false if not executed'
            succeeded:
              type: boolean
              example: true
              title: 'true if executed successfully on this batch, false if failed'
            to_be_deleted:
              type: boolean
              example: true
              title: >-
                true if ready to be deleted on kvstore, false if not ready to be
                deleted
            msg:
              title: MsgDepositWithinBatch
              type: object
              properties:
                depositor_address:
                  type: string
                  format: sdk.AccAddress
                  example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
                  description: account address of the origin of this message
                pool_id:
                  type: string
                  format: uint64
                  example: '1'
                  title: id of the target pool
                deposit_coins:
                  type: array
                  format: sdk.Coins
                  example:
                    - denom: denomX
                      amount: '1000000'
                    - denom: denomY
                      amount: '2000000'
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  title: reserve coin pair of the pool to deposit
              description: >-
                `MsgDepositWithinBatch defines` an `sdk.Msg` type that supports
                submitting 

                a deposit request to the batch of the liquidity pool.

                Deposit is submitted to the batch of the Liquidity pool with the
                specified 

                `pool_id`, `deposit_coins` for reserve.

                This request is stacked in the batch of the liquidity pool, is
                not processed 

                immediately, and is processed in the `endblock` at the same time
                as other requests.


                See:
                https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
          description: >-
            DepositMsgState defines the state of deposit message that contains
            state information as it is processed in the next batch or batches.
      pagination:
        description: >-
          pagination defines the pagination in the response. not working on this
          version.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      the response type for the QueryPoolBatchDeposit RPC method. This includes
      a list of all currently existing deposit messages of the batch and paging
      results that contain next_key and total count.
  tendermint.liquidity.v1beta1.QueryPoolBatchSwapMsgResponse:
    type: object
    properties:
      swap:
        type: object
        properties:
          msg_height:
            type: string
            format: int64
            example: '1000'
            title: height where this message is appended to the batch
          msg_index:
            type: string
            format: uint64
            example: '1'
            title: index of this swap message in this liquidity pool
          executed:
            type: boolean
            example: true
            title: 'true if executed on this batch, false if not executed'
          succeeded:
            type: boolean
            example: true
            title: 'true if executed successfully on this batch, false if failed'
          to_be_deleted:
            type: boolean
            example: true
            title: >-
              true if ready to be deleted on kvstore, false if not ready to be
              deleted
          order_expiry_height:
            type: string
            format: int64
            example: '1000'
            title: >-
              swap orders are cancelled when current height is equal to or
              higher than ExpiryHeight
          exchanged_offer_coin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            format: sdk.Coin
            example:
              denom: denomX
              amount: '600000'
            title: offer coin exchanged until now
          remaining_offer_coin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            format: sdk.Coin
            example:
              denom: denomX
              amount: '400000'
            title: offer coin currently remaining to be exchanged
          reserved_offer_coin_fee:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            format: sdk.Coin
            example:
              denom: denomX
              amount: '5000'
            title: reserve fee for pays fee in half offer coin
          msg:
            title: MsgSwapWithinBatch
            type: object
            properties:
              swap_requester_address:
                type: string
                format: sdk.AccAddress
                example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
                description: account address of the origin of this message
                title: address of swap requester
              pool_id:
                type: string
                format: uint64
                example: '1'
                description: >-
                  id of swap type, must match the value in the pool. Only
                  `swap_type_id` 1 is supported.
              swap_type_id:
                type: integer
                format: uint32
                example: '1'
                description: id of swap type. Must match the value in the pool.
              offer_coin:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                format: sdk.Coin
                example:
                  denom: denomX
                  amount: '1000000'
              demand_coin_denom:
                type: string
                example: denomB
                description: >-
                  denom of demand coin to be exchanged on the swap request, must
                  match the denom in the pool.
              offer_coin_fee:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                format: sdk.Coin
                example:
                  denom: denomX
                  amount: '5000'
              order_price:
                type: string
                format: sdk.Dec
                example: '1.1'
                description: >-
                  limit order price for the order, the price is the exchange
                  ratio of X/Y

                  where X is the amount of the first coin and Y is the amount 

                  of the second coin when their denoms are sorted
                  alphabetically.
            description: >-
              `MsgSwapWithinBatch` defines an sdk.Msg type that supports
              submitting a swap offer request to the batch of the liquidity
              pool.

              Submit swap offer to the liquidity pool batch with the specified
              the `pool_id`, `swap_type_id`,

              `demand_coin_denom` with the coin and the price you're offering

              and `offer_coin_fee` must be half of offer coin amount * current
              `params.swap_fee_rate` and ceil for reservation to pay fees.

              This request is stacked in the batch of the liquidity pool, is not
              processed 

              immediately, and is processed in the `endblock` at the same time
              as other requests.

              You must request the same fields as the pool.

              Only the default `swap_type_id` 1 is supported.


              See: https://github.com/tendermint/liquidity/tree/develop/doc

              https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
        description: >-
          SwapMsgState defines the state of the swap message that contains state
          information as the message is processed in the next batch or batches.
    description: >-
      the response type for the QueryPoolBatchSwapMsg RPC method. This includes
      a batch swap message of the batch.
  tendermint.liquidity.v1beta1.QueryPoolBatchSwapMsgsResponse:
    type: object
    properties:
      swaps:
        type: array
        items:
          type: object
          properties:
            msg_height:
              type: string
              format: int64
              example: '1000'
              title: height where this message is appended to the batch
            msg_index:
              type: string
              format: uint64
              example: '1'
              title: index of this swap message in this liquidity pool
            executed:
              type: boolean
              example: true
              title: 'true if executed on this batch, false if not executed'
            succeeded:
              type: boolean
              example: true
              title: 'true if executed successfully on this batch, false if failed'
            to_be_deleted:
              type: boolean
              example: true
              title: >-
                true if ready to be deleted on kvstore, false if not ready to be
                deleted
            order_expiry_height:
              type: string
              format: int64
              example: '1000'
              title: >-
                swap orders are cancelled when current height is equal to or
                higher than ExpiryHeight
            exchanged_offer_coin:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              format: sdk.Coin
              example:
                denom: denomX
                amount: '600000'
              title: offer coin exchanged until now
            remaining_offer_coin:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              format: sdk.Coin
              example:
                denom: denomX
                amount: '400000'
              title: offer coin currently remaining to be exchanged
            reserved_offer_coin_fee:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              format: sdk.Coin
              example:
                denom: denomX
                amount: '5000'
              title: reserve fee for pays fee in half offer coin
            msg:
              title: MsgSwapWithinBatch
              type: object
              properties:
                swap_requester_address:
                  type: string
                  format: sdk.AccAddress
                  example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
                  description: account address of the origin of this message
                  title: address of swap requester
                pool_id:
                  type: string
                  format: uint64
                  example: '1'
                  description: >-
                    id of swap type, must match the value in the pool. Only
                    `swap_type_id` 1 is supported.
                swap_type_id:
                  type: integer
                  format: uint32
                  example: '1'
                  description: id of swap type. Must match the value in the pool.
                offer_coin:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  format: sdk.Coin
                  example:
                    denom: denomX
                    amount: '1000000'
                demand_coin_denom:
                  type: string
                  example: denomB
                  description: >-
                    denom of demand coin to be exchanged on the swap request,
                    must match the denom in the pool.
                offer_coin_fee:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  format: sdk.Coin
                  example:
                    denom: denomX
                    amount: '5000'
                order_price:
                  type: string
                  format: sdk.Dec
                  example: '1.1'
                  description: >-
                    limit order price for the order, the price is the exchange
                    ratio of X/Y

                    where X is the amount of the first coin and Y is the amount 

                    of the second coin when their denoms are sorted
                    alphabetically.
              description: >-
                `MsgSwapWithinBatch` defines an sdk.Msg type that supports
                submitting a swap offer request to the batch of the liquidity
                pool.

                Submit swap offer to the liquidity pool batch with the specified
                the `pool_id`, `swap_type_id`,

                `demand_coin_denom` with the coin and the price you're offering

                and `offer_coin_fee` must be half of offer coin amount * current
                `params.swap_fee_rate` and ceil for reservation to pay fees.

                This request is stacked in the batch of the liquidity pool, is
                not processed 

                immediately, and is processed in the `endblock` at the same time
                as other requests.

                You must request the same fields as the pool.

                Only the default `swap_type_id` 1 is supported.


                See: https://github.com/tendermint/liquidity/tree/develop/doc

                https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
          description: >-
            SwapMsgState defines the state of the swap message that contains
            state information as the message is processed in the next batch or
            batches.
      pagination:
        description: >-
          pagination defines the pagination in the response. not working on this
          version.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      the response type for the QueryPoolBatchSwapMsgs RPC method. This includes
      list of all currently existing swap messages of the batch and paging
      results that contain next_key and total count.
  tendermint.liquidity.v1beta1.QueryPoolBatchWithdrawMsgResponse:
    type: object
    properties:
      withdraw:
        type: object
        properties:
          msg_height:
            type: string
            format: int64
            example: '1000'
            title: height where this message is appended to the batch
          msg_index:
            type: string
            format: uint64
            example: '1'
            title: index of this withdraw message in this liquidity pool
          executed:
            type: boolean
            example: true
            title: 'true if executed on this batch, false if not executed'
          succeeded:
            type: boolean
            example: true
            title: 'true if executed successfully on this batch, false if failed'
          to_be_deleted:
            type: boolean
            example: true
            title: >-
              true if ready to be deleted on kvstore, false if not ready to be
              deleted
          msg:
            title: MsgWithdrawWithinBatch
            type: object
            properties:
              withdrawer_address:
                type: string
                format: sdk.AccAddress
                example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
                description: account address of the origin of this message
              pool_id:
                type: string
                format: uint64
                example: '1'
                title: id of the target pool
              pool_coin:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                format: sdk.Coin
                example:
                  denom: >-
                    poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
                  amount: '1000'
            description: >-
              `MsgWithdrawWithinBatch` defines an `sdk.Msg` type that supports
              submitting 

              a withdraw request to the batch of the liquidity pool.

              Withdraw is submitted to the batch from the Liquidity pool with
              the 

              specified `pool_id`, `pool_coin` of the pool.

              This request is stacked in the batch of the liquidity pool, is not
              processed 

              immediately, and is processed in the `endblock` at the same time
              as other requests.


              See:
              https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
        description: >-
          WithdrawMsgState defines the state of the withdraw message that
          contains state information as the message is processed in the next
          batch or batches.
    description: >-
      the response type for the QueryPoolBatchWithdrawMsg RPC method. This
      includes a batch swap message of the batch.
  tendermint.liquidity.v1beta1.QueryPoolBatchWithdrawMsgsResponse:
    type: object
    properties:
      withdraws:
        type: array
        items:
          type: object
          properties:
            msg_height:
              type: string
              format: int64
              example: '1000'
              title: height where this message is appended to the batch
            msg_index:
              type: string
              format: uint64
              example: '1'
              title: index of this withdraw message in this liquidity pool
            executed:
              type: boolean
              example: true
              title: 'true if executed on this batch, false if not executed'
            succeeded:
              type: boolean
              example: true
              title: 'true if executed successfully on this batch, false if failed'
            to_be_deleted:
              type: boolean
              example: true
              title: >-
                true if ready to be deleted on kvstore, false if not ready to be
                deleted
            msg:
              title: MsgWithdrawWithinBatch
              type: object
              properties:
                withdrawer_address:
                  type: string
                  format: sdk.AccAddress
                  example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
                  description: account address of the origin of this message
                pool_id:
                  type: string
                  format: uint64
                  example: '1'
                  title: id of the target pool
                pool_coin:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  format: sdk.Coin
                  example:
                    denom: >-
                      poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
                    amount: '1000'
              description: >-
                `MsgWithdrawWithinBatch` defines an `sdk.Msg` type that supports
                submitting 

                a withdraw request to the batch of the liquidity pool.

                Withdraw is submitted to the batch from the Liquidity pool with
                the 

                specified `pool_id`, `pool_coin` of the pool.

                This request is stacked in the batch of the liquidity pool, is
                not processed 

                immediately, and is processed in the `endblock` at the same time
                as other requests.


                See:
                https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
          description: >-
            WithdrawMsgState defines the state of the withdraw message that
            contains state information as the message is processed in the next
            batch or batches.
      pagination:
        description: >-
          pagination defines the pagination in the response. Not supported on
          this version.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      the response type for the QueryPoolBatchWithdraw RPC method. This includes
      a list of all currently existing withdraw messages of the batch and paging
      results that contain next_key and total count.
  tendermint.liquidity.v1beta1.SwapMsgState:
    type: object
    properties:
      msg_height:
        type: string
        format: int64
        example: '1000'
        title: height where this message is appended to the batch
      msg_index:
        type: string
        format: uint64
        example: '1'
        title: index of this swap message in this liquidity pool
      executed:
        type: boolean
        example: true
        title: 'true if executed on this batch, false if not executed'
      succeeded:
        type: boolean
        example: true
        title: 'true if executed successfully on this batch, false if failed'
      to_be_deleted:
        type: boolean
        example: true
        title: >-
          true if ready to be deleted on kvstore, false if not ready to be
          deleted
      order_expiry_height:
        type: string
        format: int64
        example: '1000'
        title: >-
          swap orders are cancelled when current height is equal to or higher
          than ExpiryHeight
      exchanged_offer_coin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        format: sdk.Coin
        example:
          denom: denomX
          amount: '600000'
        title: offer coin exchanged until now
      remaining_offer_coin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        format: sdk.Coin
        example:
          denom: denomX
          amount: '400000'
        title: offer coin currently remaining to be exchanged
      reserved_offer_coin_fee:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        format: sdk.Coin
        example:
          denom: denomX
          amount: '5000'
        title: reserve fee for pays fee in half offer coin
      msg:
        title: MsgSwapWithinBatch
        type: object
        properties:
          swap_requester_address:
            type: string
            format: sdk.AccAddress
            example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
            description: account address of the origin of this message
            title: address of swap requester
          pool_id:
            type: string
            format: uint64
            example: '1'
            description: >-
              id of swap type, must match the value in the pool. Only
              `swap_type_id` 1 is supported.
          swap_type_id:
            type: integer
            format: uint32
            example: '1'
            description: id of swap type. Must match the value in the pool.
          offer_coin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            format: sdk.Coin
            example:
              denom: denomX
              amount: '1000000'
          demand_coin_denom:
            type: string
            example: denomB
            description: >-
              denom of demand coin to be exchanged on the swap request, must
              match the denom in the pool.
          offer_coin_fee:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            format: sdk.Coin
            example:
              denom: denomX
              amount: '5000'
          order_price:
            type: string
            format: sdk.Dec
            example: '1.1'
            description: >-
              limit order price for the order, the price is the exchange ratio
              of X/Y

              where X is the amount of the first coin and Y is the amount 

              of the second coin when their denoms are sorted alphabetically.
        description: >-
          `MsgSwapWithinBatch` defines an sdk.Msg type that supports submitting
          a swap offer request to the batch of the liquidity pool.

          Submit swap offer to the liquidity pool batch with the specified the
          `pool_id`, `swap_type_id`,

          `demand_coin_denom` with the coin and the price you're offering

          and `offer_coin_fee` must be half of offer coin amount * current
          `params.swap_fee_rate` and ceil for reservation to pay fees.

          This request is stacked in the batch of the liquidity pool, is not
          processed 

          immediately, and is processed in the `endblock` at the same time as
          other requests.

          You must request the same fields as the pool.

          Only the default `swap_type_id` 1 is supported.


          See: https://github.com/tendermint/liquidity/tree/develop/doc

          https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
    description: >-
      SwapMsgState defines the state of the swap message that contains state
      information as the message is processed in the next batch or batches.
  tendermint.liquidity.v1beta1.WithdrawMsgState:
    type: object
    properties:
      msg_height:
        type: string
        format: int64
        example: '1000'
        title: height where this message is appended to the batch
      msg_index:
        type: string
        format: uint64
        example: '1'
        title: index of this withdraw message in this liquidity pool
      executed:
        type: boolean
        example: true
        title: 'true if executed on this batch, false if not executed'
      succeeded:
        type: boolean
        example: true
        title: 'true if executed successfully on this batch, false if failed'
      to_be_deleted:
        type: boolean
        example: true
        title: >-
          true if ready to be deleted on kvstore, false if not ready to be
          deleted
      msg:
        title: MsgWithdrawWithinBatch
        type: object
        properties:
          withdrawer_address:
            type: string
            format: sdk.AccAddress
            example: cosmos1e35y69rhrt7y4yce5l5u73sjnxu0l33wvznyun
            description: account address of the origin of this message
          pool_id:
            type: string
            format: uint64
            example: '1'
            title: id of the target pool
          pool_coin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            format: sdk.Coin
            example:
              denom: >-
                poolD35A0CC16EE598F90B044CE296A405BA9C381E38837599D96F2F70C2F02A23A4
              amount: '1000'
        description: >-
          `MsgWithdrawWithinBatch` defines an `sdk.Msg` type that supports
          submitting 

          a withdraw request to the batch of the liquidity pool.

          Withdraw is submitted to the batch from the Liquidity pool with the 

          specified `pool_id`, `pool_coin` of the pool.

          This request is stacked in the batch of the liquidity pool, is not
          processed 

          immediately, and is processed in the `endblock` at the same time as
          other requests.


          See:
          https://github.com/tendermint/liquidity/blob/develop/x/liquidity/spec/04_messages.md
    description: >-
      WithdrawMsgState defines the state of the withdraw message that contains
      state information as the message is processed in the next batch or
      batches.
