syntax = "proto3";
package tendermint.liquidity;

import "tx.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/coin.proto";

option go_package = "github.com/tendermint/liquidity/types";
option (gogoproto.goproto_getters_all) = false;

message LiquidityPoolType {
    option (gogoproto.equal) = true;
    uint32 poolTypeIndex = 1 [(gogoproto.moretags) = "yaml:\"pool_type_index\""];
    string Name = 2 [(gogoproto.moretags) = "yaml:\"name\""];
    uint32 MinReserveCoinNum = 3 [(gogoproto.moretags) = "yaml:\"min_reserve_coin_num\""];
    uint32 MaxReserveCoinNum = 4 [(gogoproto.moretags) = "yaml:\"max_reserve_coin_num\""];
}

message Params {
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_stringer) = false;

    repeated LiquidityPoolType LiquidityPoolTypes = 1 [
        (gogoproto.moretags) = "yaml:\"liquidity_pool_types\"",
        (gogoproto.nullable) = false
    ];
    string MinInitDepositToPool = 2 [
        (gogoproto.moretags)   = "yaml:\"min_init_deposit_to_pool\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
        (gogoproto.nullable)   = false
    ];
    string InitPoolCoinMintAmount = 3 [
        (gogoproto.moretags)   = "yaml:\"init_pool_coin_mint_amount\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
        (gogoproto.nullable)   = false
    ];
    bytes SwapFeeRate = 4 [
        (gogoproto.moretags)   = "yaml:\"swap_fee_rate\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
    ];
    bytes LiquidityPoolFeeRate = 5 [
        (gogoproto.moretags)   = "yaml:\"liquidity_pool_fee_rate\"",
        (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
        (gogoproto.nullable)   = false
    ];
    repeated cosmos.base.v1beta1.Coin LiquidityPoolCreationFee = 6 [
        (gogoproto.moretags)   = "yaml:\"liquidity_pool_creation_fee\"",
        (gogoproto.nullable)   = false
    ];

    uint32 UnitBatchSize = 7 [(gogoproto.moretags) = "yaml:\"unit_batch_size\""];
}

message LiquidityPool {
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_stringer) = true;

    uint64 PoolID = 1 [(gogoproto.moretags) = "yaml:\"pool_id\""];
    uint32 poolTypeIndex = 2 [(gogoproto.moretags) = "yaml:\"pool_type_index\""];
    repeated string ReserveCoinDenoms = 3 [(gogoproto.moretags) = "yaml:\"reserve_coin_denoms\""];
    bytes ReserveAccount = 4 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.moretags) = "yaml:\"reserve_account\""];
    string PoolCoinDenom = 5 [(gogoproto.moretags) = "yaml:\"pool_coin_denom\""];
}

message LiquidityPoolMetaData {
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_stringer) = true;

    uint64 PoolID = 1 [(gogoproto.moretags) = "yaml:\"pool_id\""];
    cosmos.base.v1beta1.Coin PoolCoinTotalSupply = 2 [
        (gogoproto.moretags)   = "yaml:\"pool_coin_total_supply\"",
        (gogoproto.nullable)   = false
    ];
}

message LiquidityPoolBatch {
    option (gogoproto.equal) = true;
    option (gogoproto.goproto_stringer) = true;

    uint64 PoolID = 1 [(gogoproto.moretags) = "yaml:\"pool_id\""];
    uint64 BatchIndex = 2 [(gogoproto.moretags) = "yaml:\"batch_index\""];
    int64 BeginHeight = 3 [(gogoproto.moretags) = "yaml:\"begin_height\""];
    uint64 DepositMsgIndex = 4 [(gogoproto.moretags) = "yaml:\"deposit_msg_index\""];
    uint64 WithdrawMsgIndex = 5 [(gogoproto.moretags) = "yaml:\"withdraw_msg_index\""];
    uint64 SwapMsgIndex = 6 [(gogoproto.moretags) = "yaml:\"swap_msg_index\""];
    bool ExecutionStatus = 7 [(gogoproto.moretags) = "yaml:\"execution_status\""];
}

message BatchPoolDepositMsg {
//    string TxHash = 1 [(gogoproto.moretags) = "yaml:\"tx_hash\""];
    int64 MsgHeight = 1 [(gogoproto.moretags) = "yaml:\"msg_height\""];
    MsgDepositToLiquidityPool Msg = 2 [(gogoproto.moretags) = "yaml:\"msg\""];
}

message BatchPoolWithdrawMsg {
//    string TxHash = 1 [(gogoproto.moretags) = "yaml:\"tx_hash\""];
    int64 MsgHeight = 1 [(gogoproto.moretags) = "yaml:\"msg_height\""];
    MsgWithdrawFromLiquidityPool Msg = 2 [(gogoproto.moretags) = "yaml:\"msg\""];
}

message BatchPoolSwapMsg {
//    string TxHash = 1 [(gogoproto.moretags) = "yaml:\"tx_hash\""];
    int64 MsgHeight = 1 [(gogoproto.moretags) = "yaml:\"msg_height\""];
    MsgSwap Msg = 2 [(gogoproto.moretags) = "yaml:\"msg\""];
}
