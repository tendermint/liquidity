syntax = "proto3";
package cosmos.gov.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos_proto/coin.proto";

option go_package = "github.com/tendermint/liquidity/types";
option (gogoproto.goproto_getters_all) = false;

//option (gogoproto.goproto_stringer_all) = false;
//option (gogoproto.stringer_all)         = false;


message MsgCreateLiquidityPool {
  option (gogoproto.equal) = true;

  bytes pool_creator = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.moretags) = "yaml:\"pool_creator\""];
  uint32 pool_type_index = 2 [(gogoproto.moretags) = "yaml:\"pool_type_index\""];
  repeated string reserve_coin_denoms = 3 [(gogoproto.moretags) = "yaml:\"reserve_coin_denoms\""];
  repeated cosmos.base.v1beta1.Coin deposit_coins = 4 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"deposit_coins\""];
}

message MsgDepositToLiquidityPool {
  option (gogoproto.equal) = true;

  bytes depositor = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.moretags) = "yaml:\"depositor\""];
  uint64 pool_id = 2 [(gogoproto.moretags) = "yaml:\"pool_id\"", (gogoproto.jsontag) = "pool_id", (gogoproto.customname) = "PoolID"];
  repeated cosmos.base.v1beta1.Coin deposit_coins = 3 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"deposit_coins\""];
}

message MsgWithdrawFromLiquidityPool {
  option (gogoproto.equal) = true;

  bytes withdrawer = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.moretags) = "yaml:\"withdrawer\""];
  uint64 pool_id = 2 [(gogoproto.moretags) = "yaml:\"pool_id\"", (gogoproto.jsontag) = "pool_id", (gogoproto.customname) = "PoolID"];
  repeated cosmos.base.v1beta1.Coin pool_coin_amount = 3 [(gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"pool_coin_amount\""];
}

message MsgSwap {
  option (gogoproto.equal) = true;

  bytes swap_requester = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress", (gogoproto.moretags) = "yaml:\"swap_requester\""];
  uint64 pool_id = 2 [(gogoproto.moretags) = "yaml:\"pool_id\"", (gogoproto.jsontag) = "pool_id", (gogoproto.customname) = "PoolID"];
  uint32 pool_type_index = 3 [(gogoproto.moretags) = "yaml:\"pool_type_index\""];
  uint32 swap_type = 4 [(gogoproto.moretags) = "yaml:\"swap_type\""];

  cosmos.base.v1beta1.Coin offer_coin = 5 [
     (gogoproto.nullable)     = false,
     (gogoproto.moretags)     = "yaml:\"offer_coin\""
  ];

  cosmos.base.v1beta1.Coin demand_coin = 6 [
     (gogoproto.nullable)     = false,
     (gogoproto.moretags)     = "yaml:\"demand_coin\""
  ];

  bytes order_price = 7 [
    (gogoproto.moretags)   = "yaml:\"order_price\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.nullable)   = false
  ];
}
